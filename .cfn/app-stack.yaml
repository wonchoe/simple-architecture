AWSTemplateFormatVersion: '2010-09-09'
Description: Application stack — EC2 Dev, ALB + ASG for Prod, Security Groups

Parameters:
  VpcId:
    Type: String
  PublicSubnetId:
    Type: String
  PublicSubnetId2:
    Type: String
  PrivateSubnet1Id:
    Type: String
  PrivateSubnet2Id:
    Type: String

Resources:
  # role for ssm agent
  EC2SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - EC2-SSMRole

  # Security Group for Dev EC2 (allow SSH + HTTP)
  DevInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP for dev
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # (Змініть на свій IP у реальному проекті!)
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: DevInstanceSG

  # Security Group for ALB (allow HTTP/HTTPS from anywhere)
  ALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP/HTTPS for ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ALBSG

  # Security Group for Prod EC2 (allow only from ALB)
  ProdInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from ALB only
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSG
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ProdInstanceSG

  # EC2 Dev Instance
  DevInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref EC2SSMInstanceProfile
      ImageId: ami-0c02fb55956c7d316 # Amazon Linux 2
      InstanceType: t3.micro
      SubnetId: !Ref PublicSubnetId
      SecurityGroupIds:
        - !Ref DevInstanceSG
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -
        yum install -y nodejs git
        npm install -g pm2
        mkdir -p /var/www/app
        chown ec2-user:ec2-user /var/www/app
      Tags:
        - Key: Name
          Value: DevEC2

  # Application Load Balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: prod-alb
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnetId
        - !Ref PublicSubnetId2
      SecurityGroups:
        - !Ref ALBSG

  # Target Group for ALB (Prod EC2)
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: '80'
      HealthCheckPath: /
      Matcher:
        HttpCode: 200-399
      Name: prod-target-group

  # Listener for ALB
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  # Launch Template for Prod EC2
  ProdLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: prod-lt
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt EC2SSMInstanceProfile.Arn
        ImageId: ami-0c02fb55956c7d316 # Amazon Linux 2 (заміни при потребі)
        InstanceType: t3.micro
        SecurityGroupIds:
          - !Ref ProdInstanceSG
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: ProdEC2
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -
          yum install -y nodejs git
          npm install -g pm2
          # опціонально: створити директорію для апки
          mkdir -p /var/www/app
          chown ec2-user:ec2-user /var/www/app

  # Auto Scaling Group for Prod
  ProdASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
      LaunchTemplate:
        LaunchTemplateId: !Ref ProdLaunchTemplate
        Version: !GetAtt ProdLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      Tags:
        - Key: Name
          Value: ProdASG
          PropagateAtLaunch: true

Outputs:
  DevInstanceId:
    Value: !Ref DevInstance
    Description: Dev EC2 instance ID
  ALBEndpoint:
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Description: DNS name for the ALB
